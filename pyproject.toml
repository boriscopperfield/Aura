[tool.poetry]
name = "aura"
version = "4.0.0"
description = "AURA - An AI-Native Meta-OS"
authors = ["AURA Team"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/boriscopperfield/Aura"
keywords = ["ai", "meta-os", "cognitive-system"]

[tool.poetry.dependencies]
python = "^3.10"
typer = {extras = ["all"], version = "^0.9.0"}
pydantic = "^2.0.0"
rich = "^13.0.0"
gitpython = "^3.1.0"
asyncio = "^3.4.3"
faiss-cpu = "^1.7.0"
openai = "^1.0.0"
requests = "^2.31.0"
numpy = "^1.24.0"
python-dotenv = "^1.0.0"
httpx = "^0.24.0"
uvicorn = {extras = ["standard"], version = "^0.22.0", optional = true}
fastapi = {version = "^0.100.0", optional = true}

[tool.poetry.extras]
api = ["fastapi", "uvicorn"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
isort = "^5.0.0"
mypy = "^1.0.0"
ruff = "^0.0.270"
coverage = "^7.2.7"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
aura = "aura.api.cli:app"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "B", "I"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"